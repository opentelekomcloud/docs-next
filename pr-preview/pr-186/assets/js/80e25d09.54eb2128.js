"use strict";(self.webpackChunkdocs_next=self.webpackChunkdocs_next||[]).push([[47884],{30811:e=>{e.exports=JSON.parse('{"tag":{"label":"ecs","permalink":"/docs-next/pr-preview/pr-186/docs/tags/ecs","allTagsPath":"/docs-next/pr-preview/pr-186/docs/tags","count":5,"items":[{"id":"best-practices/computing/elastic-cloud-server/building-highly-available-web-server-clusters-with-keepalived","title":"Building Highly Available Web Server Clusters with Keepalived","description":"Virtual IP addresses are used for active and standby switchover of ECSs to achieve high availability. This way if one ECS goes down for some reason, the other one can take over and services continue uninterrupted. This article uses CentOS Stream release 9 ECSs as an example to describe how to set up highly available web server clusters using Keepalived and Nginx.","permalink":"/docs-next/pr-preview/pr-186/docs/best-practices/computing/elastic-cloud-server/building-highly-available-web-server-clusters-with-keepalived"},{"id":"best-practices/networking/domain-name-service/configuring-private-domain-names-for-ecss","title":"Configuring Private Domain Names for ECSs","description":"If one of your ECSs is not working normally and you need to use the backup ECS to handle requests, but you have not configured private zones for the two ECSs, you need to change the private IP address in the code for the faulty ECS. This will interrupt your services and cause you to publish your website again, which is time- and labor-consuming.","permalink":"/docs-next/pr-preview/pr-186/docs/best-practices/networking/domain-name-service/configuring-private-domain-names-for-ecss"},{"id":"best-practices/databases/document-database-service/from-ecs-hosted-mongodb-to-dds","title":"From ECS-hosted MongoDB to DDS","description":"DRS helps you migrate data from MongoDB databases on ECSs to DDS instances on the current cloud. With DRS, you can migrate databases online with zero downtime and your services and databases can remain operational during migration.","permalink":"/docs-next/pr-preview/pr-186/docs/best-practices/databases/document-database-service/from-ecs-hosted-mongodb-to-dds"},{"id":"blueprints/by-use-case/analytics/umami/using-rds-postgresql-to-setup-umami-on-ecs","title":"Using RDS for PostgreSQL to Set Up Umami on ECS","description":"In this blueprint we are going to set up Umami on Open Telekom Cloud leveraging an Elastic Cloud Server (ECS), while using Relational Database Service (RDS) for PostgreSQL to manage the database.","permalink":"/docs-next/pr-preview/pr-186/docs/blueprints/by-use-case/analytics/umami/using-rds-postgresql-to-setup-umami-on-ecs"},{"id":"blueprints/by-use-case/storage/zone-redundant-nfs","title":"Zone-redundant NFS Server","description":"The main target of this blueprint is to provide a zone-redundant NFS Server with the option to perform a failover. We are going to use ECS, EVS and Storage Disaster Recovery Service of Open Telekom Cloud for that. Additionally we will cover operational tasks like extending the size of the NFS Share.","permalink":"/docs-next/pr-preview/pr-186/docs/blueprints/by-use-case/storage/zone-redundant-nfs"}],"unlisted":false}}')}}]);