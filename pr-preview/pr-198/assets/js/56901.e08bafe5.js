/*! For license information please see 56901.e08bafe5.js.LICENSE.txt */
"use strict";(self.webpackChunkdocs_next=self.webpackChunkdocs_next||[]).push([[56901],{56901:(e,t,a)=>{a.r(t),a.d(t,{scale_checkbox_group:()=>o});var s=a(90936),i=a(94200);const o=class{constructor(e){(0,s.r)(this,e),this.label="",this.status="",this.invalid=!1,this.value="",this.selectText="Select all",this.unselectText="Unselect all"}handleCheckboxChange(e){const t=e.composedPath()[0],{tagName:a,checked:s}=t;"scale-checkbox"===a.toLowerCase()&&(t!==this.groupNode||this.updateChildrenCheckboxStates(s),this.updateParentCheckboxState())}componentDidRender(){""!==this.status&&(0,i.s)({tag:"deprecated",message:'Property "status" is deprecated. Please use the "invalid" property!',type:"warn",source:this.host}),this.host.hasAttribute("aria-label")&&(0,i.s)({tag:"deprecated",message:'Property "ariaLabel" is deprecated. Please use the "ariaLabelCheckboxGroup" property!',type:"warn",source:this.host})}componentDidLoad(){this.updateParentCheckboxState();const e=this.host.querySelector("fieldset"),t=new MutationObserver((()=>{this.updateParentCheckboxState()}));t.observe(e,{childList:!0}),this.observer=t}disconnectedCallback(){this.observer&&this.observer.disconnect()}getChildNodes(){return Array.from(this.host.querySelector("fieldset").querySelectorAll("scale-checkbox"))}updateChildrenCheckboxStates(e){this.getChildNodes().filter((e=>!e.disabled)).forEach((t=>{void 0!==e&&(t.checked=e,t.indeterminate=!1)}))}updateParentCheckboxState(){const e=this.getChildNodes(),t=null==e?void 0:e.map((e=>e.checked)),a=null==e?void 0:e.map((e=>e.indeterminate)),s=null==e?void 0:e.map((e=>e.disabled)),i=t.every(Boolean),o=t.some(Boolean),n=a.some(Boolean),c=s.every(Boolean);this.checked=i||o,this.indeterminate=n||o&&!i,this.disabled=c,this.actionText=i?this.unselectText:this.selectText}render(){return(0,s.h)(s.a,{class:"checkbox-group"},(0,s.h)("scale-checkbox",{ref:e=>this.groupNode=e,name:this.name,label:this.label,ariaLabelCheckbox:`${this.ariaLabelCheckboxGroup||this.label} - ${this.actionText}`,helperText:this.helperText,status:this.status,invalid:this.invalid,value:this.value,inputId:this.inputId,checked:this.checked,indeterminate:this.indeterminate,disabled:this.disabled,part:"parent-checkbox"}),(0,s.h)("fieldset",{part:"fieldset"},(0,s.h)("legend",null,this.ariaLabelCheckboxGroup||this.label),(0,s.h)("slot",null)))}get host(){return(0,s.g)(this)}};o.style=":host,.checkbox-group{--spacing-left-container:var(--telekom-spacing-composition-space-10);--spacing-left-checkbox:var(--telekom-spacing-composition-space-04);--spacing-top-slotted-item:var(--telekom-spacing-composition-space-05)}.checkbox-group{display:inline-flex;flex-direction:column;position:relative}.checkbox-group [part='fieldset']{display:flex;flex-direction:column;border:0;padding:0;margin:0;margin-left:var(--spacing-left-container)}.checkbox-group [part='parent-checkbox']{line-height:var(--telekom-typography-line-spacing-standard);--font-weight-label:var(--telekom-typography-font-weight-bold)}.checkbox-group legend{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border-width:0}.checkbox-group scale-checkbox{margin-top:var(--spacing-top-slotted-item)}"},94200:(e,t,a)=>{a.d(t,{s:()=>o});const s={beta:"\u03b2",WIP:"\ud83d\udee0 WIP",deprecated:"\ud83d\ude35 Deprecation notice",warning:"Warning"},i={beta:"This component is currently in beta status. Some things may be refactored. Watch the change log for now.",WIP:"This component is currently under development and is prone to change. Please wait for its release.\nIt will be available in Storybook once it's finished and documented.",deprecated:"This component is deprecated."};function o({tag:e="WIP",extraMessage:t=null,message:a=null,source:o=null,type:n="info"}){(0,console[n])(`%c scale \u2013 ${s[e]} `,"background: #E20074; color: #FFF; border-radius: 4px",`\n\n${a||i[e]} ${t?"\n"+t:""}\n    `,null!==o?"\nsource:":"","object"==typeof o?o:`${o}`,null!==o?"\n\n":"")}}}]);