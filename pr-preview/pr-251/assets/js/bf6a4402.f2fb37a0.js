"use strict";(self.webpackChunkdocs_next=self.webpackChunkdocs_next||[]).push([[40182],{85884:e=>{e.exports=JSON.parse('{"tag":{"label":"prometheus-adapter","permalink":"/docs-next/pr-preview/pr-251/docs/tags/prometheus-adapter","allTagsPath":"/docs-next/pr-preview/pr-251/docs/tags","count":1,"items":[{"id":"best-practices/containers/cloud-container-engine/auto-scaling-based-on-elb-monitoring-metrics","title":"Auto Scaling Based on ELB Monitoring Metrics","description":"By default, Kubernetes scales a workload based on resource usage metrics such as CPU and memory. However, this mechanism cannot reflect the real-time resource usage when traffic bursts arrive, because the collected CPU and memory usage data lags behind the actual load balancer traffic metrics. For some services (such as flash sale and social media) that require fast auto scaling, scaling based on this rule may not be performed in a timely manner and cannot meet these services\' actual needs. In this case, auto scaling based on ELB QPS data can respond to service requirements more timely.","permalink":"/docs-next/pr-preview/pr-251/docs/best-practices/containers/cloud-container-engine/auto-scaling-based-on-elb-monitoring-metrics"}],"unlisted":false}}')}}]);