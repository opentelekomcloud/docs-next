"use strict";(self.webpackChunkdocs_next=self.webpackChunkdocs_next||[]).push([[29400],{15621:e=>{e.exports=JSON.parse('{"tag":{"label":"rds","permalink":"/docs-next/pr-preview/pr-282/docs/tags/rds","allTagsPath":"/docs-next/pr-preview/pr-282/docs/tags","count":3,"items":[{"id":"best-practices/databases/relational-database-service/configure-sg-for-rds-instances","title":"Configure Security Groups for PostgreSQL RDS Instances and Clients","description":"Two distinct Security Groups will be required for every RDS setup. The first will be assigned to the RDS instance/nodes, and must allow inbound traffic on port 5432, which is the default PostgreSQL port. If both the RDS and client nodes are deployed within the same Subnet, this rule can be restricted to that Subnet\u2019s IP range for tighter control. This ensures that only internal workloads\u2014such can initiate connections to the database, minimizing exposure and adhering to the principle of least privilege.","permalink":"/docs-next/pr-preview/pr-282/docs/best-practices/databases/relational-database-service/configure-sg-for-rds-instances"},{"id":"blueprints/by-use-case/security/keycloak/cce-keycloak","title":"Deploy Keycloak on CCE","description":"In this blueprint, we are going to discuss the steps to install Keycloak, in Open Telekom Cloud, on a CCE Cluster.","permalink":"/docs-next/pr-preview/pr-282/docs/blueprints/by-use-case/security/keycloak/cce-keycloak"},{"id":"blueprints/by-use-case/analytics/umami/using-rds-postgresql-to-setup-umami-on-ecs","title":"Using RDS for PostgreSQL to Set Up Umami on ECS","description":"In this blueprint we are going to set up Umami on Open Telekom Cloud leveraging an Elastic Cloud Server (ECS), while using Relational Database Service (RDS) for PostgreSQL to manage the database.","permalink":"/docs-next/pr-preview/pr-282/docs/blueprints/by-use-case/analytics/umami/using-rds-postgresql-to-setup-umami-on-ecs"}],"unlisted":false}}')}}]);