"use strict";(self.webpackChunkdocs_next=self.webpackChunkdocs_next||[]).push([[92110],{15693:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"blueprints/by-use-case/sovereignty/nextcloud/deploy-nextcloud-on-cce","title":"Deploy Nextcloud on CCE","description":"This guide walks through deploying a highly available Nextcloud setup on an Open Telekom Cloud Cloud Container Engine (CCE) cluster, using Object Storage Service (OBS) for file storage and Relational Database Service (RDS) for Nextcloud\'s database. We will use the Nextcloud Helm charts for that matter.","source":"@site/docs/blueprints/by-use-case/sovereignty/nextcloud/2_deploy-nextcloud-on-cce.md","sourceDirName":"blueprints/by-use-case/sovereignty/nextcloud","slug":"/blueprints/by-use-case/sovereignty/nextcloud/deploy-nextcloud-on-cce","permalink":"/docs-next/pr-preview/pr-282/docs/blueprints/by-use-case/sovereignty/nextcloud/deploy-nextcloud-on-cce","draft":false,"unlisted":false,"editUrl":"https://github.com/opentelekomcloud/docs-next/tree/main/docs/blueprints/by-use-case/sovereignty/nextcloud/2_deploy-nextcloud-on-cce.md","tags":[{"inline":true,"label":"nextcloud","permalink":"/docs-next/pr-preview/pr-282/docs/tags/nextcloud"},{"inline":true,"label":"storage","permalink":"/docs-next/pr-preview/pr-282/docs/tags/storage"},{"inline":true,"label":"office","permalink":"/docs-next/pr-preview/pr-282/docs/tags/office"},{"inline":true,"label":"collaboration","permalink":"/docs-next/pr-preview/pr-282/docs/tags/collaboration"},{"inline":true,"label":"sovereignty","permalink":"/docs-next/pr-preview/pr-282/docs/tags/sovereignty"}],"version":"current","sidebarPosition":2,"frontMatter":{"id":"deploy-nextcloud-on-cce","title":"Deploy Nextcloud on CCE","tags":["nextcloud","storage","office","collaboration","sovereignty"]},"sidebar":"blueprintsSidebar","previous":{"title":"Nextcloud","permalink":"/docs-next/pr-preview/pr-282/docs/blueprints/by-use-case/sovereignty/nextcloud/"},"next":{"title":"Real-Time Collaboration with Collabora Online","permalink":"/docs-next/pr-preview/pr-282/docs/blueprints/by-use-case/sovereignty/nextcloud/realtime-collaboration-with-collabora-online"}}');var i=s(74848),r=s(28453);const o={id:"deploy-nextcloud-on-cce",title:"Deploy Nextcloud on CCE",tags:["nextcloud","storage","office","collaboration","sovereignty"]},l="Deploy Nextcloud on CCE",a={},c=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Solution Overview",id:"solution-overview",level:2},{value:"Creating a Namespace",id:"creating-a-namespace",level:2},{value:"Creating Kubernetes Secrets",id:"creating-kubernetes-secrets",level:2},{value:"OBS Credentials Secret",id:"obs-credentials-secret",level:4},{value:"Database Credentials Secret",id:"database-credentials-secret",level:4},{value:"NextCloud Credentials Secret",id:"nextcloud-credentials-secret",level:4},{value:"Redis Credentials Secret",id:"redis-credentials-secret",level:4},{value:"Configuring Helm Chart Values",id:"configuring-helm-chart-values",level:2},{value:"image.flavor",id:"imageflavor",level:3},{value:"nginx",id:"nginx",level:3},{value:"ingress",id:"ingress",level:3},{value:"phpClientHttpsFix",id:"phpclienthttpsfix",level:3},{value:"nextcloud",id:"nextcloud",level:3},{value:"nextcloud.objectStore",id:"nextcloudobjectstore",level:4},{value:"nextcloud.defaultConfigs",id:"nextclouddefaultconfigs",level:4},{value:"nextcloud.configs",id:"nextcloudconfigs",level:4},{value:"nextcloud.strategy",id:"nextcloudstrategy",level:4},{value:"internal/externalDatabase",id:"internalexternaldatabase",level:3},{value:"Disabling Internal Database",id:"disabling-internal-database",level:4},{value:"Enabling External Database",id:"enabling-external-database",level:4},{value:"redis",id:"redis",level:3},{value:"cronjob",id:"cronjob",level:3},{value:"hpa",id:"hpa",level:3},{value:"resources",id:"resources",level:3},{value:"persistence",id:"persistence",level:3},{value:"startupProbe",id:"startupprobe",level:3},{value:"imaginary",id:"imaginary",level:3},{value:"Deploying Helm Chart",id:"deploying-helm-chart",level:2},{value:"Validation &amp; Testing",id:"validation--testing",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"deploy-nextcloud-on-cce",children:"Deploy Nextcloud on CCE"})}),"\n",(0,i.jsxs)(n.p,{children:["This guide walks through deploying a highly available Nextcloud setup on an Open Telekom Cloud Cloud Container Engine (CCE) cluster, using Object Storage Service (OBS) for file storage and Relational Database Service (RDS) for Nextcloud's database. We will use the ",(0,i.jsx)(n.a,{href:"https://github.com/nextcloud/helm/tree/main/charts/nextcloud",children:"Nextcloud Helm charts"})," for that matter."]}),"\n",(0,i.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Cloud Container Engine (CCE) cluster"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"A CCE cluster with sufficient resources."}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"kubectl"})," configured to access the cluster."]}),"\n",(0,i.jsxs)(n.li,{children:["An ingress controller installed on the cluster (we will use Nginx Ingress Controller in this blueprint, see ",(0,i.jsx)(n.a,{href:"/docs-next/pr-preview/pr-282/docs/best-practices/containers/cloud-container-engine/auto-scaling-based-on-elb-monitoring-metrics#installing-nginx-ingress-controller",children:"Installing Nginx Ingress Controller"}),")."]}),"\n",(0,i.jsxs)(n.li,{children:["DNS entry pointing to the Ingress load balancer and TLS certificate for the Nextcloud domain (e.g., via cert-manager, see ",(0,i.jsx)(n.a,{href:"/docs-next/pr-preview/pr-282/docs/best-practices/containers/cloud-container-engine/issue-an-acme-certificate-with-dns01-solver-in-cce",children:"Issue an ACME Certificate"}),")."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Object Storage Service (OBS)"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["A bucket created in OBS for Nextcloud primary file storage, see ",(0,i.jsx)(n.a,{href:"https://docs.otc.t-systems.com/object-storage-service/umn/obs_console_operation_guide/getting_started/creating_a_bucket.html#obs-03-0306",children:"Creating a Bucket"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["OBS credentials (Access Key, Secret Key) with read/write permissions on the bucket, see ",(0,i.jsx)(n.a,{href:"https://docs.otc.t-systems.com/object-storage-service/api-ref/appendixes/obtaining_access_keys_ak_sk.html",children:"Obtaining Access Keys (AK/SK)"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Relational Database Service (RDS)"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["A MySQL (or PostgreSQL) instance deployed in RDS, ideally in HA mode across multiple AZs, see ",(0,i.jsx)(n.a,{href:"https://docs.otc.t-systems.com/relational-database-service/umn/getting_started_with_rds_for_mysql/index.html",children:"Getting Started with RDS for MySQL"}),"."]}),"\n",(0,i.jsx)(n.li,{children:"Network connectivity: Configure RDS security group to allow access from CCE cluster nodes. If RDS is in a different VPC, ensure CCE cluster can access it (via VPC peering)."}),"\n"]}),"\n",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsx)(n.p,{children:"RDS auto-backup is recommended to ensure recovery from any database corruption or data loss."})}),"\n",(0,i.jsxs)(n.admonition,{type:"important",children:[(0,i.jsxs)(n.p,{children:["RDS is ",(0,i.jsx)(n.strong,{children:"not"})," scaled via Kubernetes. Ensure that the RDS instance has sufficient storage and CPU resources to handle your workload. For more information read:"]}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://docs.otc.t-systems.com/relational-database-service/umn/faqs/product_consulting/what_should_i_pay_attention_to_when_using_rds.html",children:"What Should I Pay Attention to When Using RDS?"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://docs.otc.t-systems.com/relational-database-service/umn/faqs/database_monitoring/which_db_instance_monitoring_metrics_do_i_need_to_pay_attention_to.html",children:"Which DB Instance Monitoring Metrics Do I Need to Pay Attention To?"})}),"\n"]})]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"solution-overview",children:"Solution Overview"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"image",src:s(70287).A+"",width:"969",height:"808"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Nextcloud Application Pods"}),": Scaled horizontally with HPA. This scales pods based on load to ensure high availability."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Ingress"}),": Nginx Ingress routes HTTPS traffic to Nextcloud Service."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Object Storage"}),": Nextcloud uses S3-compatible OBS as primary storage for user files."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Database"}),": External MySQL RDS instance for data storage."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cache (optional but recommended)"}),": Use Redis for caching to improve performance. You can deploy Redis on CCE or use a managed cache service like ",(0,i.jsx)(n.a,{href:"https://docs.otc.t-systems.com/distributed-cache-service/index.html",children:"Distributed Cache Service"})," (we will use Redis on top of CCE in this blueprint)."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"creating-a-namespace",children:"Creating a Namespace"}),"\n",(0,i.jsx)(n.p,{children:"Create a dedicated namespace:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"kubectl create namespace nextcloud\n"})}),"\n",(0,i.jsx)(n.h2,{id:"creating-kubernetes-secrets",children:"Creating Kubernetes Secrets"}),"\n",(0,i.jsxs)(n.p,{children:["We use ",(0,i.jsx)(n.strong,{children:"Secrets"})," to hold credentials and other configuration, so that Nextcloud pods can retrieve them securely at runtime. The Helm chart references these secrets. By saving configuration in secrets, we avoid hardcoding sensitive data in Helm values or container images, and ensure the deployment remains secure and maintainable. Now create the following secrets:"]}),"\n",(0,i.jsxs)(n.admonition,{type:"tip",children:[(0,i.jsxs)(n.p,{children:["When creating Secrets, use strong and unique passwords. To generate a random secure password, you can use the ",(0,i.jsx)(n.code,{children:"openssl"})," command. e.g.:"]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"openssl rand -base64 16\n"})}),(0,i.jsxs)(n.p,{children:["This will output a ",(0,i.jsx)(n.strong,{children:"random base64-encoded"})," string that can be used as a password."]})]}),"\n",(0,i.jsx)(n.h4,{id:"obs-credentials-secret",children:"OBS Credentials Secret"}),"\n",(0,i.jsxs)(n.p,{children:["This provides credentials for an external S3-compliant Object Storage (in our case OBS) and is used in helm chart ",(0,i.jsx)(n.code,{children:"values"})," under ",(0,i.jsx)(n.code,{children:"nextcloud.objectStore.s3.existingSecret"}),". Replace the placeholders with values you obtained in previous steps and run the following command:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'kubectl -n nextcloud create secret generic nextcloud-obs \\\n  --from-literal=accessKey="<OBS_ACCESS_KEY>" \\\n  --from-literal=secretKey="<OBS_SECRET_KEY>" \\\n  --from-literal=host="<OBS_Endpoint>" \\\n  --from-literal=bucket="<OBS_BUCKET>" \\\n  --from-literal=sse_c_key="<server-side-encryption-key>"\n'})}),"\n",(0,i.jsx)(n.admonition,{type:"important",children:(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Host value should be in the format of ",(0,i.jsx)(n.code,{children:"obs.{region}.otc.t-systems.com"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["If you don't have a server-side encryption key, you can provide an empty string for the ",(0,i.jsx)(n.code,{children:"sse_c_key"})," value."]}),"\n"]})}),"\n",(0,i.jsx)(n.h4,{id:"database-credentials-secret",children:"Database Credentials Secret"}),"\n",(0,i.jsxs)(n.p,{children:["This provides credentials for an external database (in our case RDS) and is used in helm chart ",(0,i.jsx)(n.code,{children:"values"})," under ",(0,i.jsx)(n.code,{children:"externalDatabase.existingSecret"}),". Replace the placeholders with values you obtained in previous steps and run the following command:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'kubectl -n nextcloud create secret generic nextcloud-db \\\n  --from-literal=host="<RDS_HOST>:<PORT>" \\\n  --from-literal=username="nextcloud" \\\n  --from-literal=password="<NEXTCLOUD_DB_PASSWORD>" \\\n  --from-literal=database="nextcloud"\n'})}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["You can find the host and port of the database under the ",(0,i.jsx)(n.strong,{children:"Basic Information"})," page of your RDS instance under ",(0,i.jsx)(n.strong,{children:"Floating IP Address"})," and ",(0,i.jsx)(n.strong,{children:"Database Port"})," fields."]})}),"\n",(0,i.jsx)(n.h4,{id:"nextcloud-credentials-secret",children:"NextCloud Credentials Secret"}),"\n",(0,i.jsxs)(n.p,{children:["This provides Nextcloud instance credentials and is used in helm chart ",(0,i.jsx)(n.code,{children:"values"})," under ",(0,i.jsx)(n.code,{children:"nextcloud.existingSecret"}),". Replace the placeholders with your own values and run the following command:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'kubectl -n nextcloud create secret generic nextcloud \\\n  --from-literal=nextcloud-password="<NEXTCLOUD_PASSWORD>" \\\n  --from-literal=nextcloud-username="<NEXTCLOUD_USERNAME>" \\\n  --from-literal=smtp-host="<SMTP_HOST>" \\\n  --from-literal=smtp-password="<SMTP_PASSWORD>" \\\n  --from-literal=smtp-username="<SMTP_USERNAME>" \\\n  --from-literal=smtpHost="<SMTP_HOST>" \\\n  --from-literal=token="<METRICS_TOKEN>"\n'})}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["If you don't want to use a mail server, set all ",(0,i.jsx)(n.code,{children:"smtp-*"})," values to empty."]}),"\n",(0,i.jsxs)(n.li,{children:["If you are collecting metrics from NextCloud and you are using a token for authentication instead of username/password, you need to provide the token for the Prometheus exporter. The value should be the same as ",(0,i.jsx)(n.code,{children:"metrics.token"})," in the helm chart values. If you don't want to use a token, set it to empty."]}),"\n"]})}),"\n",(0,i.jsx)(n.h4,{id:"redis-credentials-secret",children:"Redis Credentials Secret"}),"\n",(0,i.jsxs)(n.p,{children:["This provides credentials for Redis and is used in helm chart ",(0,i.jsx)(n.code,{children:"values"})," under ",(0,i.jsx)(n.code,{children:"redis.auth.existingSecret"}),". Replace the placeholders with your own values and run the following command:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'kubectl -n nextcloud create secret generic nextcloud-redis \\\n  --from-literal=redis-password="<REDIS_PASSWORD>" \n'})}),"\n",(0,i.jsx)(n.h2,{id:"configuring-helm-chart-values",children:"Configuring Helm Chart Values"}),"\n",(0,i.jsxs)(n.p,{children:["In this section, we will configure the ",(0,i.jsx)(n.code,{children:"values.yaml"})," file used by the Nextcloud Helm chart during installation."]}),"\n",(0,i.jsxs)(n.p,{children:["Before proceeding, please note that you need to create a ",(0,i.jsx)(n.code,{children:"values.yaml"})," file in your project directory and add the values provided below based on your specific needs."]}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["For more information about configuring the Helm chart and available options, we recommend visiting the ",(0,i.jsx)(n.a,{href:"https://github.com/nextcloud/helm/tree/main/charts/nextcloud",children:"official  Nextcloud Helm Chart GitHub repository"}),"."]})}),"\n",(0,i.jsx)(n.h3,{id:"imageflavor",children:"image.flavor"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"image.flavor"})," field determines which image flavor of Nextcloud you want to use. We use ",(0,i.jsx)(n.code,{children:"fpm"})," for our example as it is better for HA setups."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"image:\n  flavor: fpm\n"})}),"\n",(0,i.jsx)(n.h3,{id:"nginx",children:"nginx"}),"\n",(0,i.jsxs)(n.p,{children:["If you have used the ",(0,i.jsx)(n.code,{children:"fpm"})," image flavor, you need to enable the ",(0,i.jsx)(n.code,{children:"nginx"})," field. This creates an nginx container inside the Nextcloud pod which works as a reverse proxy for the ",(0,i.jsx)(n.strong,{children:"nextcloud-fpm"})," container."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'nginx:\n  enabled: true\n  resources:\n    requests:\n      cpu: "100m"\n      memory: "128Mi"\n    limits:\n      cpu: "500m"\n      memory: "512Mi"\n'})}),"\n",(0,i.jsxs)(n.admonition,{type:"note",children:[(0,i.jsxs)(n.p,{children:["In order to be able to scale the pods with HPA, you need to set ",(0,i.jsx)(n.code,{children:"resources"}),". Configure the ",(0,i.jsx)(n.code,{children:"resources"})," to match your requirements (provided values are just examples)."]}),(0,i.jsxs)(n.p,{children:["If you don't want to use HPA, you can omit the ",(0,i.jsx)(n.code,{children:"resources"})," stanza altogether."]})]}),"\n",(0,i.jsx)(n.h3,{id:"ingress",children:"ingress"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"ingress"})," field determines how Nextcloud should be exposed externally."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'ingress:\n  enabled: true\n  className: nginx\n  annotations:\n   nginx.ingress.kubernetes.io/affinity: cookie \n   nginx.ingress.kubernetes.io/proxy-body-size: 4G\n   kubernetes.io/tls-acme: "true"\n   cert-manager.io/cluster-issuer: opentelekomcloud-letsencrypt\n   nginx.ingress.kubernetes.io/enable-cors: "true"\n   nginx.ingress.kubernetes.io/cors-allow-headers: "X-Forwarded-For"\n   # Keep this in sync with the README.md file of the Helm Chart (https://github.com/nextcloud/helm/blob/main/charts/nextcloud/README.md):\n   nginx.ingress.kubernetes.io/server-snippet: |-\n     server_tokens off;\n     proxy_hide_header X-Powered-By;\n     rewrite ^/.well-known/webfinger /index.php/.well-known/webfinger last;\n     rewrite ^/.well-known/nodeinfo /index.php/.well-known/nodeinfo last;\n     rewrite ^/.well-known/host-meta /public.php?service=host-meta last;\n     rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json;\n     location = /.well-known/carddav {\n       return 301 $scheme://$host/remote.php/dav;\n     }\n     location = /.well-known/caldav {\n       return 301 $scheme://$host/remote.php/dav;\n     }\n     location = /robots.txt {\n       allow all;\n       log_not_found off;\n       access_log off;\n     }\n     location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {\n       deny all;\n     }\n     location ~ ^/(?:autotest|occ|issue|indie|db_|console) {\n       deny all;\n     }\n  tls:\n    - secretName: nextcloud-tls\n      hosts:\n        - nextcloud.example.com\n  path: /\n  pathType: Prefix\n'})}),"\n",(0,i.jsx)(n.p,{children:"Here are some key points to note:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Ingress Configuration:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["The Ingress is ",(0,i.jsx)(n.code,{children:"enabled"})," and configured to use ",(0,i.jsx)(n.code,{children:"nginx"})," as the ingress controller. If you have a different ingress controller, you may need to adjust these settings accordingly."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Annotations Explanation:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"nginx.ingress.kubernetes.io/affinity: cookie"})," ensures that each user session is routed to the same Nginx pod."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"nginx.ingress.kubernetes.io/proxy-body-size: 4G"})," limits the body size of proxied requests, preventing overflow issues."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'kubernetes.io/tls-acme: "true"'})," enables automatic SSL certificate management by Kubernetes using Let's Encrypt."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"cert-manager.io/cluster-issuer: opentelekomcloud-letsencrypt"})," specifies the cluster issuer for TLS secrets, integrating with Cert-Manager."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'nginx.ingress.kubernetes.io/enable-cors: "true"'})," allows Cross-Origin connections."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'nginx.ingress.kubernetes.io/cors-allow-headers: "X-Forwarded-For"'})," permits necessary headers for client connection handling."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"nginx.ingress.kubernetes.io/server-snippet:"})," adds custom snippets for service discovery (CalDAV, CardDAV, webfinger, nodeinfo) to work and denies access to several internal directories to enhance security."]}),"\n"]}),"\n",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(n.admonition,{type:"caution",children:(0,i.jsx)(n.p,{children:"Make sure to provide the correct cluster issuer name, or else the TLS certificates will not be generated."})}),"\n",(0,i.jsxs)(n.admonition,{type:"important",children:[(0,i.jsxs)(n.p,{children:["Server snippet annotations will not be validated unless specific flags are enabled in the ingress controller configuration. If you're using ",(0,i.jsx)(n.strong,{children:"Nginx"})," as your ingress controller, ensure that the following settings are present in the ",(0,i.jsx)(n.code,{children:"ingress-controller"})," ConfigMap's ",(0,i.jsx)(n.code,{children:"data"})," field:"]}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"allowSnippetAnnotations: true"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"annotations-risk-level: Critical"})}),"\n"]}),"\n"]}),(0,i.jsxs)(n.p,{children:["You may need to restart the ",(0,i.jsx)(n.strong,{children:"nginx-ingress-controller"})," pod after making these changes for them to take effect."]}),(0,i.jsx)(n.p,{children:"Without these settings, the annotations validation will fail, leading to potential Nextcloud service discovery issues. This is a critical setting that must be configured properly."})]}),"\n",(0,i.jsx)(n.admonition,{title:"User Responsibility",type:"danger",children:(0,i.jsx)(n.p,{children:"Users must understand the impact of these configurations on the ingress controller. Misapplying changes can lead to serious security vulnerabilities and should be handled by users who understand the implications of their actions, so consulting documentation or experienced administrators is recommended."})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Host Configuration:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Replace ",(0,i.jsx)(n.code,{children:"example.com"})," with your actual domain."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"phpclienthttpsfix",children:"phpClientHttpsFix"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"phpClientHttpsFix"})," configures HTTPS settings for PHP clients when using a reverse proxy. Setting ",(0,i.jsx)(n.code,{children:"enabled: true"})," enables this feature. The ",(0,i.jsx)(n.code,{children:"protocol: https"})," specifies that a secure protocol is used. By manually overriding automatic detection settings, this configuration prevents potential issues arising from failed hostname, protocol, or webroot detection in reverse proxy setups."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"phpClientHttpsFix:\n  enabled: true \n  protocol: https\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsx)(n.p,{children:"If you encounter redirecting issues after login, try enabling this field."})}),"\n",(0,i.jsx)(n.h3,{id:"nextcloud",children:"nextcloud"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"nextcloud"})," field determines how Nextcloud is configured."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"nextcloud:\n  host: nextcloud.example.com\n  existingSecret:\n    enabled: true\n    secretName: nextcloud\n    usernameKey: nextcloud-username\n    passwordKey: nextcloud-password\n    tokenKey: token\n    smtpUsernameKey: smtp-username\n    smtpPasswordKey: smtp-password\n    smtpHostKey: smtp-host\n  ## SMTP configuration\n  mail:\n    enabled: false \n"})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"host"}),": Specifies the hostname where Nextcloud will be accessible from. e.g.: ",(0,i.jsx)(n.code,{children:"nextcloud.example.com"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"existingSecret"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"enabled: true"})," enables the use of existing secrets for configuration."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"secretName: nextcloud"})," The name of the secret to get credentials from. Use the one created earlier (e.g., ",(0,i.jsx)(n.code,{children:"nextcloud"}),")."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"usernameKey: nextcloud-username"})," Key within the secret used to retrieve the username for Nextcloud authentication."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"passwordKey: nextcloud-password"})," Key within the secret used to retrieve the password for Nextcloud authentication."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"tokenKey: token"})," Key within the secret used to retrieve an authentication token (e.g., for metrics)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"smtpUsernameKey: smtp-username"})," and ",(0,i.jsx)(n.code,{children:"smtpPasswordKey: smtp-password"})," Keys used if SMTP is enabled, to retrieve credentials for email configurations."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"smtpHostKey: smtp-host"})," Key used if SMTP is enabled, to retrieve the SMTP host for outgoing mail."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"mail"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"enabled"})," If set to ",(0,i.jsx)(n.code,{children:"true"}),", enables the use of this configuration block. Enable this section if you want to use email-based features and you have already configured SMTP credentials in the ",(0,i.jsx)(n.code,{children:"nextcloud"})," secret."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"nextcloudobjectstore",children:"nextcloud.objectStore"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"nextcloud.objectstore.s3"})," field determines how Nextcloud will interact with an external S3-compatible Object Storage service."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'nextcloud:\n# ... other fields ...\n  # `objectStore` is a subfield of the `nextcloud` field.\n  objectStore:\n      s3:\n        enabled: true\n        legacyAuth: false\n        ssl: true\n        port: "443"\n        region: "eu-de"\n        bucket: "nextcloud"\n        prefix: ""\n        usePathStyle: false\n        autoCreate: true\n        storageClass: "STANDARD"\n        existingSecret: "nextcloud-obs"\n        secretKeys:\n          host: "host"\n          accessKey: "accessKey"\n          secretKey: "secretKey"\n          bucket: "bucket"\n          sse_c_key: "sse_c_key"\n'})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"enabled: true"})," ensures that S3-compatible Object Storage is enabled for Nextcloud."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"legacyAuth: false"})," disables legacy authentication methods. Typically kept as default."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"ssl: true"})," enables TLS/SSL for secure connections."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"port: 443"})," sets the default port, useful if not using the standard port."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"region: eu-de"})," specifies the region for Object Storage. Can be adjusted based on your setup."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"bucket: nextcloud"})," sets the name of the bucket used by Nextcloud."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'prefix: ""'})," defines the object prefix within the bucket."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"usePathStyle: false"})," uses path-style URLs for accessing objects in the bucket."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"autoCreate: true"})," automatically creates the bucket if it doesn't exist."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"storageClass: STANDARD"})," selects the storage class; ",(0,i.jsx)(n.strong,{children:"STANDARD"})," is typical when using S3-compatible Object Storage."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"existingSecret"})," is set to the name of the secret that contains Object Storage credentials, created earlier (e.g., ",(0,i.jsx)(n.code,{children:"nextcloud-obs"}),")."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"secretKeys"}),": contains the key within the secret used to retrieve credentials."]}),"\n"]}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsx)(n.p,{children:"Ensure your OBS AK/SK has the appropriate permissions to allow Nextcloud to write data to the bucket."})}),"\n",(0,i.jsx)(n.h4,{id:"nextclouddefaultconfigs",children:"nextcloud.defaultConfigs"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"nextcloud.defaultConfigs"})," field determines how Nextcloud configures itself."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"nextcloud:\n# ... other fields ...\n  # `defaultConfigs` is a subfield of the `nextcloud` field.\n  defaultConfigs:\n    # Swift Object Storage as primary storage\n    swift.config.php: false\n    # -- imaginary support config\n    imaginary.config.php: true\n"})}),"\n",(0,i.jsx)(n.p,{children:"Here's an explanation of the fields:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"swift.config.php: false"})," ensures that Swift storage is disabled. In this example, we are using OBS as primary storage, so it's set to ",(0,i.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"imaginary.config.php: true"})," enables Nextcloud configuration to use imaginary features. This feature is not enabled by default, and if you enable it, you also have to set the ",(0,i.jsx)(n.code,{children:"imaginary.enabled"})," field to ",(0,i.jsx)(n.code,{children:"true"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["Imaginary is a service that enhances Nextcloud's ability to process and manage images efficiently. Visit ",(0,i.jsx)(n.a,{href:"https://github.com/h2non/imaginary",children:"Imaginary"})," for more information."]})}),"\n",(0,i.jsx)(n.h4,{id:"nextcloudconfigs",children:"nextcloud.configs"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"nextcloud.configs"})," field determines how Nextcloud configures itself. You can add additional configs here, ",(0,i.jsx)(n.strong,{children:"but it's not recommended to do so unless you know what you are doing."})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"nextcloud:\n# ... other fields ...\n  # `configs` is a subfield of the `nextcloud` field.\n  configs:\n  # For example, to enable image and text file previews:\n    previews.config.php: |-\n      <?php\n      $CONFIG = array (\n        'enable_previews' => true,\n        'enabledPreviewProviders' => array (\n          'OC\\Preview\\Movie',\n          'OC\\Preview\\PNG',\n          'OC\\Preview\\JPEG',\n          'OC\\Preview\\GIF',\n          'OC\\Preview\\BMP',\n          'OC\\Preview\\XBitmap',\n          'OC\\Preview\\MP3',\n          'OC\\Preview\\MP4',\n          'OC\\Preview\\TXT',\n          'OC\\Preview\\MarkDown',\n          'OC\\Preview\\PDF'\n        ),\n      );\n    proxy.config.php: |-\n      <?php\n      $CONFIG = array (\n        'trusted_proxies' => array(\n          0 => '127.0.0.1',\n          1 => '10.0.0.0/8',\n        ),\n        'forwarded_for_headers' => array('HTTP_X_FORWARDED_FOR'),\n      );\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"previews.config.php:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"enable_previews"}),": Enable direct preview functionality for selected file types without conversion."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"enabledPreviewProviders"}),": Define providers that handle specific file formats (e.g., images, videos, documents)."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"proxy.config.php:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"trusted_proxies"}),": Restrict access to Nextcloud from trusted IP ranges or networks."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"forwarded_for_headers"}),": Forward client IP information for enhanced logging and security."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"nextcloudstrategy",children:"nextcloud.strategy"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"nextcloud.strategy"})," field determines the deployment strategy for replacing old pods with new ones during upgrades. By default, ",(0,i.jsx)(n.code,{children:"type"})," is set to ",(0,i.jsx)(n.code,{children:"Recreate"}),". This means that when a new pod is created, the old one will be immediately removed. However, if you want to maintain High Availability, you should set it to ",(0,i.jsx)(n.code,{children:"RollingUpdate"}),". This ensures a smooth transition during upgrades."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"nextcloud:\n# ... other fields ...\n  # `strategy` is a subfield of the `nextcloud` field.\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 10%\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["Values used in the blueprint for ",(0,i.jsx)(n.code,{children:"maxSurge"})," and ",(0,i.jsx)(n.code,{children:"maxUnavailable"})," are for demonstration purposes only. You should set these values according to your requirements and the resources available in your cluster."]})}),"\n",(0,i.jsx)(n.h3,{id:"internalexternaldatabase",children:"internal/externalDatabase"}),"\n",(0,i.jsx)(n.p,{children:"In this section, we will configure the database that supports our installation."}),"\n",(0,i.jsx)(n.h4,{id:"disabling-internal-database",children:"Disabling Internal Database"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"internalDatabase.enabled"})," field determines whether to use the internal database or not. If set to ",(0,i.jsx)(n.code,{children:"false"}),", Nextcloud will not have its own database and will rely on an external database instead. In this example, we will use an RDS instance as an external database."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"internalDatabase:\n  enabled: false\n"})}),"\n",(0,i.jsx)(n.h4,{id:"enabling-external-database",children:"Enabling External Database"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"externalDatabase.enabled"})," field determines whether to use an external database or not. If set to ",(0,i.jsx)(n.code,{children:"true"}),", Nextcloud will connect to an external database instead of its own internal database."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"externalDatabase:\n  enabled: true\n  ## Supported database engines: mysql or postgresql\n  type: mysql\n  existingSecret:\n    enabled: true\n    secretName: nextcloud-db\n    usernameKey: username\n    passwordKey: password\n    hostKey: host \n    databaseKey: database \n"})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"enabled:"})," Determines whether to use an external database or not. If set to ",(0,i.jsx)(n.code,{children:"true"}),", Nextcloud will connect to an external database instead of its own internal database. In this example, it is set to ",(0,i.jsx)(n.code,{children:"true"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"type:"})," Specifies the database engine. Can be ",(0,i.jsx)(n.strong,{children:"mysql"})," or ",(0,i.jsx)(n.strong,{children:"postgresql"}),". In this example, it is set to ",(0,i.jsx)(n.code,{children:"mysql"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"existingSecret:"})," Specifies the secret containing the database credentials."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"enabled: true"})," Uses existing secrets for database authentication."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"secretName: nextcloud-db"})," The name of the secret to get credentials from. Use the one created earlier (e.g., ",(0,i.jsx)(n.code,{children:"nextcloud-db"}),")."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"*Keys"}),": Contains the key within the secret used to retrieve credentials."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"redis",children:"redis"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"redis"})," field specifies the configuration for Redis as a cache backend in Nextcloud."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'redis:\n  enabled: true\n  auth:\n    enabled: true\n    existingSecret: "nextcloud-redis"\n    existingSecretPasswordKey: "redis-password"  \n  global:\n    storageClass: "csi-disk"\n'})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"enabled:"})," Enables the use of Redis for caching in Nextcloud."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"auth:"})," Configures Redis authentication using existing secrets instead of plain text passwords."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"enabled: true"})," Turns on Redis authentication."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'existingSecret: "nextcloud-redis"'})," The name of a secret already created (e.g., ",(0,i.jsx)(n.code,{children:"nextcloud-redis"}),")."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'existingSecretPasswordKey: "redis-password"'})," The specific key within the existing secret where the Redis password is stored."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"global:"})," Provides additional configuration for Redis:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'storageClass: "csi-disk"'}),' Specifies the storage class to use for persistent storage of Redis data. In this case, we use "csi-disk".']}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsxs)(n.p,{children:["The vanilla ",(0,i.jsx)(n.strong,{children:"CSI Disk"})," storage class is suitable for general-purpose use cases where consistent and reliable storage is sufficient. If your Nextcloud instance requires higher I/O performance for intensive caching, you can consider switching to an I/O intensive storage class."]})}),"\n",(0,i.jsx)(n.h3,{id:"cronjob",children:"cronjob"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"cronjob"})," field specifies the configuration to use a cron sidecar container in the Nextcloud pod to run cron jobs in the background. Background jobs are important for tasks that do not necessarily need user intervention, but still need to be executed frequently (cleaning up, sending some notifications, pulling RSS feeds, etc.)"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'cronjob:\n  enabled: true\n  resources:\n    requests:\n      cpu: "50m"\n      memory: "64Mi"\n    limits:\n      cpu: "150m"\n      memory: "128Mi"\n'})}),"\n",(0,i.jsxs)(n.admonition,{type:"important",children:[(0,i.jsxs)(n.p,{children:["In order to be able to scale the pods with HPA, you need to set ",(0,i.jsx)(n.code,{children:"resources"}),". Configure the ",(0,i.jsx)(n.code,{children:"resources"})," field to match your requirements (provided values are just examples)."]}),(0,i.jsxs)(n.p,{children:["If you don't want to use HPA, you can omit the ",(0,i.jsx)(n.code,{children:"resources"})," field."]})]}),"\n",(0,i.jsx)(n.h3,{id:"hpa",children:"hpa"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"hpa"})," field specifies the configuration for the horizontal pod autoscaler (HPA). The HPA is a Kubernetes feature that automatically scales the number of replicas of a deployment based on the resource utilization metrics."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"hpa:\n  enabled: true\n  cputhreshold: 60\n  minPods: 1\n  maxPods: 10\n"})}),"\n",(0,i.jsx)(n.p,{children:"In this example, we enable HPA to scale the number of replicas up or down based on CPU utilization."}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["Values used here for ",(0,i.jsx)(n.code,{children:"cputhreshold"}),", ",(0,i.jsx)(n.code,{children:"minPods"}),", and ",(0,i.jsx)(n.code,{children:"maxPods"})," are for demonstration purposes only. You should set these values according to your requirements and the resources available in your cluster."]})}),"\n",(0,i.jsx)(n.admonition,{type:"important",children:(0,i.jsxs)(n.p,{children:["When using HPA, make sure that the ",(0,i.jsx)(n.code,{children:"resources"})," field is specified for each container in your deployment. Otherwise, the horizontal pod autoscaler won't be able to scale up or down based on utilization.\nAlso, when using persistent storage for Nextcloud containers, you have to specify a persistent volume claim (PVC) with ",(0,i.jsx)(n.code,{children:"ReadWriteMany"})," access mode, or else new pods will fail to start."]})}),"\n",(0,i.jsx)(n.h3,{id:"resources",children:"resources"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"resources"})," field specifies the CPU and memory limits for the Nextcloud container."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'resources:\n  requests:\n    cpu: "100m"\n    memory: "128Mi"\n  limits:\n    cpu: "500m"\n    memory: "512Mi"\n'})}),"\n",(0,i.jsxs)(n.admonition,{type:"note",children:[(0,i.jsxs)(n.p,{children:["In order to be able to scale the pods with HPA, you need to set ",(0,i.jsx)(n.code,{children:"resources"}),". Configure the ",(0,i.jsx)(n.code,{children:"resources"})," field to match your requirements (provided values are just examples)."]}),(0,i.jsxs)(n.p,{children:["If you don't want to use HPA, you can omit the ",(0,i.jsx)(n.code,{children:"resources"})," field."]})]}),"\n",(0,i.jsx)(n.h3,{id:"persistence",children:"persistence"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"persistence"})," field specifies whether Nextcloud internal data should be stored in a persistent volume. If enabled, the Nextcloud container will use the specified values to create the PVC."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'persistence:\n  enabled: true\n  annotations:\n    everest.io/volume-as: absolute-path\n    everest.io/sfsturbo-share-id: <SFS_TURBO_ID>\n    everest.io/path: /nextcloud\n    everest.io/reclaim-policy: retain-volume-only\n    everest.io/csi.enable-sfsturbo-dir-quota: "true" \n  storageClass: "csi-sfsturbo"\n  accessMode: ReadWriteMany\n  size: 20Gi\n'})}),"\n",(0,i.jsx)(n.admonition,{type:"caution",children:(0,i.jsxs)(n.p,{children:["If ",(0,i.jsx)(n.code,{children:"persistence"})," is ",(0,i.jsx)(n.code,{children:"disabled"}),", Nextcloud will store its data in a temporary directory, and every time it restarts or a new pod is created, it will try to install itself again and the user will see a post-installation page. So it's recommended to enable persistence."]})}),"\n",(0,i.jsx)(n.admonition,{type:"important",children:(0,i.jsxs)(n.p,{children:["If using HPA or replications, you should specify a PVC with ",(0,i.jsx)(n.code,{children:"ReadWriteMany"})," access mode so it can be mounted by all pods of Nextcloud which exist on different nodes. Otherwise, the HPA will not work properly and replicas will fail to start."]})}),"\n",(0,i.jsx)(n.admonition,{type:"caution",children:(0,i.jsxs)(n.p,{children:["Because of the way that the Nextcloud image is configured (see ",(0,i.jsx)(n.a,{href:"https://github.com/nextcloud/docker/issues/2044",children:"issue on Github"}),"), when deploying it with NFS-mounted persistent volumes, users may encounter startup failures (see the ",(0,i.jsx)(n.a,{href:"https://github.com/nextcloud/helm/issues/10",children:"issue on Github"}),"). This is due to NFS latency or delayed availability of file locks that Nextcloud depends on during initialization. As a result, containers can fail the Kubernetes startup probe before the application is ready, causing them to restart repeatedly. The solution is to enable and set a long ",(0,i.jsx)(n.code,{children:"initialDelaySeconds"})," period under the ",(0,i.jsx)(n.code,{children:"startupProbe"})," field. This gives the container enough time to initialize correctly with the NFS mount."]})}),"\n",(0,i.jsx)(n.h3,{id:"startupprobe",children:"startupProbe"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"startupProbe"})," field allows you to configure a startup probe for your Nextcloud deployment, which can help prevent containers from restarting repeatedly due to initialization failures."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"startupProbe:\n  enabled: true\n  initialDelaySeconds: 120\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"important",children:(0,i.jsxs)(n.p,{children:["If you are using NFS-mounted persistent volumes and encounter startup failures with Nextcloud, enabling ",(0,i.jsx)(n.code,{children:"startupProbe"})," and setting a long enough ",(0,i.jsx)(n.code,{children:"initialDelaySeconds"})," can help mitigate this issue."]})}),"\n",(0,i.jsx)(n.h3,{id:"imaginary",children:"imaginary"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"imaginary"})," field specifies whether to enable imaginary as a backend service for your Nextcloud deployment."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"imaginary:\n  enabled: true\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["If you are planning to use imaginary, make sure that the ",(0,i.jsx)(n.code,{children:"nextcloud.defaultConfigs.imaginary.config.php"})," field is set to ",(0,i.jsx)(n.code,{children:"true"}),", so that Nextcloud is configured to use imaginary."]})}),"\n",(0,i.jsx)(n.h2,{id:"deploying-helm-chart",children:"Deploying Helm Chart"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Add Nextcloud Helm Repository"}),":"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"helm repo add nextcloud https://nextcloud.github.io/helm/\nhelm repo update\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Prepare values"}),": Incorporate the sections above, filling in your domain, secret names, storageClass, endpoints, etc. Here is an example of a ",(0,i.jsx)(n.strong,{children:"values.yaml"}),"`**:"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",metastring:'title="values.yaml"',children:'image:\n  flavor: fpm\n\nnginx:\n  enabled: true\n  resources:\n    requests:\n      cpu: "100m"\n      memory: "128Mi"\n    limits:\n      cpu: "500m"\n      memory: "512Mi"\n\ningress:\n  enabled: true\n  className: nginx\n  annotations:\n    nginx.ingress.kubernetes.io/affinity: cookie\n    nginx.ingress.kubernetes.io/proxy-body-size: 4G\n    kubernetes.io/tls-acme: "true"\n    cert-manager.io/cluster-issuer: opentelekomcloud-letsencrypt\n    nginx.ingress.kubernetes.io/enable-cors: "true"\n    nginx.ingress.kubernetes.io/cors-allow-headers: "X-Forwarded-For"\n    # Keep this in sync with the README.md file of the Helm Chart (https://github.com/nextcloud/helm/blob/main/charts/nextcloud/README.md):\n    nginx.ingress.kubernetes.io/server-snippet: |-\n      server_tokens off;\n      proxy_hide_header X-Powered-By;\n      rewrite ^/.well-known/webfinger /index.php/.well-known/webfinger last;\n      rewrite ^/.well-known/nodeinfo /index.php/.well-known/nodeinfo last;\n      rewrite ^/.well-known/host-meta /public.php?service=host-meta last;\n      rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json;\n      location = /.well-known/carddav {\n        return 301 $scheme://$host/remote.php/dav;\n      }\n      location = /.well-known/caldav {\n        return 301 $scheme://$host/remote.php/dav;\n      }\n      location = /robots.txt {\n        allow all;\n        log_not_found off;\n        access_log off;\n      }\n      location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {\n        deny all;\n      }\n      location ~ ^/(?:autotest|occ|issue|indie|db_|console) {\n        deny all;\n      }\n  tls:\n    - secretName: nextcloud-tls\n      hosts:\n        - nextcloud.example.com\n  path: /\n  pathType: Prefix\nphpClientHttpsFix:\n  enabled: true\n  protocol: https\n\nnextcloud:\n  host: nextcloud.example.com\n  existingSecret:\n    enabled: true\n    secretName: nextcloud\n    usernameKey: nextcloud-username\n    passwordKey: nextcloud-password\n    tokenKey: token\n    smtpUsernameKey: smtp-username\n    smtpPasswordKey: smtp-password\n    smtpHostKey: smtp-host\n  ## SMTP configuration\n  mail:\n    enabled: false\n  objectStore:\n    s3:\n      enabled: true\n      legacyAuth: false\n      ssl: true\n      port: "443"\n      region: "eu-de"\n      bucket: "nextcloud"\n      prefix: ""\n      usePathStyle: false\n      autoCreate: true\n      storageClass: "STANDARD"\n      existingSecret: "nextcloud-obs"\n      secretKeys:\n        host: "host"\n        accessKey: "accessKey"\n        secretKey: "secretKey"\n        bucket: "bucket"\n        sse_c_key: "sse_c_key"\n  defaultConfigs:\n    # Swift Object Storage as primary storage\n    swift.config.php: false\n    # -- imaginary support config\n    imaginary.config.php: true\n  configs:\n    # For example, to enable image and text file previews:\n    previews.config.php: |-\n      <?php\n      $CONFIG = array (\n        \'enable_previews\' => true,\n        \'enabledPreviewProviders\' => array (\n          \'OC\\Preview\\Movie\',\n          \'OC\\Preview\\PNG\',\n          \'OC\\Preview\\JPEG\',\n          \'OC\\Preview\\GIF\',\n          \'OC\\Preview\\BMP\',\n          \'OC\\Preview\\XBitmap\',\n          \'OC\\Preview\\MP3\',\n          \'OC\\Preview\\MP4\',\n          \'OC\\Preview\\TXT\',\n          \'OC\\Preview\\MarkDown\',\n          \'OC\\Preview\\PDF\'\n        ),\n      );\n    proxy.config.php: |-\n      <?php\n      $CONFIG = array (\n        \'trusted_proxies\' => array(\n          0 => \'127.0.0.1\',\n          1 => \'10.0.0.0/8\',\n        ),\n        \'forwarded_for_headers\' => array(\'HTTP_X_FORWARDED_FOR\'),\n      );\n\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 10%\n\nexternalDatabase:\n  enabled: true\n  ## Supported database engines: mysql or postgresql\n  type: mysql\n  existingSecret:\n    enabled: true\n    secretName: nextcloud-db\n    usernameKey: username\n    passwordKey: password\n    hostKey: host\n    databaseKey: database\n\nredis:\n  enabled: true\n  auth:\n    enabled: true\n    existingSecret: "nextcloud-redis"\n    existingSecretPasswordKey: "redis-password"\n  global:\n    storageClass: "csi-disk"\n\ncronjob:\n  enabled: true\n  resources:\n    requests:\n      cpu: "50m"\n      memory: "64Mi"\n    limits:\n      cpu: "150m"\n      memory: "128Mi"\n\nhpa:\n  enabled: true\n  cputhreshold: 60\n  minPods: 1\n  maxPods: 10\n\nresources:\n  requests:\n    cpu: "100m"\n    memory: "128Mi"\n  limits:\n    cpu: "500m"\n    memory: "512Mi"\n\npersistence:\n  enabled: true\n  annotations:\n    everest.io/volume-as: absolute-path\n    everest.io/sfsturbo-share-id: <SFS_TURBO_ID>\n    everest.io/path: /nextcloud\n    everest.io/reclaim-policy: retain-volume-only\n    everest.io/csi.enable-sfsturbo-dir-quota: "true"\n  storageClass: "csi-sfsturbo"\n  accessMode: ReadWriteMany\n  size: 20Gi\n\nstartupProbe:\n  enabled: true\n  initialDelaySeconds: 120\n\nimaginary:\n  enabled: true\n\n'})}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Install/Upgrade:"})," Run the following command to install/upgrade Nextcloud:"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"helm -n nextcloud upgrade \\\n--install nextcloud nextcloud/nextcloud \\\n-f values.yaml \\\n--version 6.6.10\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"4",children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Verify Pods & Services:"})," Run these commands to ensure Nextcloud is ready:"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"kubectl -n nextcloud get pods\nkubectl -n nextcloud get svc,ingress\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Wait until ",(0,i.jsx)(n.strong,{children:"all"})," Nextcloud pods are ",(0,i.jsx)(n.code,{children:"Running"})," and ",(0,i.jsx)(n.code,{children:"READY"}),"."]}),"\n",(0,i.jsx)(n.li,{children:"Check that Ingress is assigned an external IP and DNS resolves."}),"\n"]}),"\n",(0,i.jsxs)(n.ol,{start:"5",children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Initial Setup"}),":"]}),"\n"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Access Nextcloud using the URL provided in the Ingress."}),"\n",(0,i.jsxs)(n.li,{children:["Log in with the credentials provided in the ",(0,i.jsx)(n.strong,{children:"nextcloud"})," secret. Complete the initial setup like installing preferred apps, configuring settings or etc."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"image",src:s(57014).A+"",width:"1033",height:"850"})}),"\n",(0,i.jsx)(n.h2,{id:"validation--testing",children:"Validation & Testing"}),"\n",(0,i.jsxs)(n.p,{children:["You can check the security of your setup with the ",(0,i.jsx)(n.a,{href:"https://scan.nextcloud.com/",children:"Nextcloud Security Scan"}),". If everything is secure, you will get an ",(0,i.jsx)(n.strong,{children:"A+"})," score. If not, you can check the scan results for specific issues."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"image",src:s(24281).A+"",width:"1005",height:"855"})}),"\n",(0,i.jsxs)(n.admonition,{type:"tip",children:[(0,i.jsx)(n.p,{children:"You can also check the following to make sure your setup is reliable and resilient to failures:"}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"File Upload/Download"}),": Upload files of various sizes and observe that files end up encrypted in the OBS bucket."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Database Connectivity"}),": Check RDS metrics to confirm queries."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Failover Testing"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Delete one Nextcloud pod and ensure another pod serves traffic normally."}),"\n",(0,i.jsx)(n.li,{children:"Test node failure: cordon/drain a node and verify pods reschedule."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Ingress TLS"}),": Ensure HTTPS works and test redirect from HTTP to HTTPS if desired."]}),"\n"]})]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},70287:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/diagram-46b830dad2cc20a041166a9c2e152c5e.png"},57014:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/nextcloud-login-b05228a1434b5a5b0eaca81609c139c9.png"},24281:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/scan-7a4a37698e6ba17df2f553aca81f20af.png"},28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>l});var t=s(96540);const i={},r=t.createContext(i);function o(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);