"use strict";(self.webpackChunkdocs_next=self.webpackChunkdocs_next||[]).push([[63206],{84673:e=>{e.exports=JSON.parse('{"tag":{"label":"kafka","permalink":"/docs-next/pr-preview/pr-284/docs/tags/kafka","allTagsPath":"/docs-next/pr-preview/pr-284/docs/tags","count":4,"items":[{"id":"best-practices/application-services/distributed-message-service/configuring-message-accumulation-monitoring","title":"Configuring Message Accumulation Monitoring","description":"Unprocessed messages accumulate if the client\'s consumption is slower than the server\'s sending. When accumulated messages cannot be consumed in time, we can configure alarm rules so that you will be notified when the number of accumulated messages in a consumer group exceeds the threshold.","permalink":"/docs-next/pr-preview/pr-284/docs/best-practices/application-services/distributed-message-service/configuring-message-accumulation-monitoring"},{"id":"best-practices/application-services/distributed-message-service/improving-kafka-message-processing-efficiency","title":"Improving Kafka Message Processing Efficiency","description":"During message sending and consumption, Distributed Message Service (DMS) for Kafka, producers, and consumers collaborate to ensure service reliability. In addition, efficiency and accuracy of message sending and consumption improves when developers make proper use of DMS for Kafka topics.","permalink":"/docs-next/pr-preview/pr-284/docs/best-practices/application-services/distributed-message-service/improving-kafka-message-processing-efficiency"},{"id":"best-practices/application-services/distributed-message-service/migrating-kafka-services","title":"Migrating Kafka Services","description":"This solution will demonstrate how you can migrate Kafka services to connect message producers and consumers to a new Kafka instance and can even migrate persisted message data to a new Kafka instance.","permalink":"/docs-next/pr-preview/pr-284/docs/best-practices/application-services/distributed-message-service/migrating-kafka-services"},{"id":"best-practices/application-services/distributed-message-service/optimizing-consumer-polling","title":"Optimizing Consumer Polling","description":"While consuming messages from DMS, consumers can customize the duration for pulling messages. To pull messages for a long time, consumers only need to set the parameter of the poll(long) method to a proper value. However, such persistent connections may cause pressure on the client and the server, especially when the number of partitions is large and multiple threads are enabled for each consumer.","permalink":"/docs-next/pr-preview/pr-284/docs/best-practices/application-services/distributed-message-service/optimizing-consumer-polling"}],"unlisted":false}}')}}]);