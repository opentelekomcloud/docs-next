/*! For license information please see 73604.afdd2342.js.LICENSE.txt */
"use strict";(self.webpackChunkdocs_next=self.webpackChunkdocs_next||[]).push([[73604],{65733:(t,e,s)=>{s.d(e,{c:()=>a});var r,o,i,a=(r=function(t){!function(){var e={}.hasOwnProperty;function s(){for(var t=[],r=0;r<arguments.length;r++){var o=arguments[r];if(o){var i=typeof o;if("string"===i||"number"===i)t.push(o);else if(Array.isArray(o)&&o.length){var a=s.apply(null,o);a&&t.push(a)}else if("object"===i)for(var n in o)e.call(o,n)&&o[n]&&t.push(n)}}return t.join(" ")}t.exports?(s.default=s,t.exports=s):window.classNames=s}()},r(i={path:o,exports:{},require:function(t,e){return function(){throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs")}()}},i.exports),i.exports)},73604:(t,e,s)=>{s.r(e),s.d(e,{scale_toggle_group:()=>n});var r=s(90936),o=s(65733),i=s(91779),a=s(94200);const n=class{constructor(t){(0,r.r)(this,t),this.scaleChange=(0,r.c)(this,"scale-change",7),this.scaleChangeLegacy=(0,r.c)(this,"scaleChange",7),this.position=0,this.slottedButtons=0,this.status=[],this.size="regular",this.background="white",this.fullWidth=!1,this.disabled=!1,this.hideBorder=!1,this.singleSelect=!1,this.ariaLabelTranslation="toggle button group with $slottedButtons buttons",this.colorScheme="color",this.variant="color"}scaleClickHandler(t){let e;e=this.singleSelect&&t.detail.selected?this.status.map((e=>t.detail.id===e.id?t.detail:Object.assign(Object.assign({},e),{selected:!1}))):this.status.map((e=>t.detail.id===e.id?t.detail:Object.assign({},e))),this.setNewState(e)}handlePropsChange(){this.propagatePropsToChildren()}componentDidLoad(){const t=[],e=this.getAllToggleButtons();this.slottedButtons=e.length,e.forEach((e=>{this.position++,t.push({id:e.getAttribute("toggle-button-id"),selected:e.hasAttribute("selected")}),e.setAttribute("position",this.position.toString()),e.setAttribute("aria-description-translation","$position $selected")})),this.propagatePropsToChildren(),this.position=0,this.status=t}getAllToggleButtons(){return Array.from(this.hostElement.querySelectorAll("scale-toggle-button"))}propagatePropsToChildren(){this.getAllToggleButtons().forEach((t=>{t.setAttribute("size",this.size),t.setAttribute("background",this.background),t.setAttribute("disabled",this.disabled&&"disabled"),t.setAttribute("color-scheme","color"!==this.variant?this.variant:this.colorScheme),t.setAttribute("variant","color"!==this.colorScheme?this.colorScheme:this.variant),t.setAttribute("hide-border",this.hideBorder?"true":"false")}))}getAriaLabelTranslation(){return this.ariaLabelTranslation.replace(/\$slottedButtons/g,`${this.slottedButtons}`)}componentDidRender(){this.fullWidth&&this.setButtonWidth(),this.setChildrenCorners(),"color"!==this.colorScheme&&(0,a.s)({tag:"deprecated",message:'Property "colorScheme" is deprecated. Please use the "variant" property!',type:"warn",source:this.hostElement})}setNewState(t){Array.from(this.hostElement.querySelectorAll("scale-toggle-button")).forEach(((e,s)=>{e.setAttribute("selected",t[s].selected?"true":"false")})),this.status=t,(0,i.e)(this,"scaleChange",this.status)}setButtonWidth(){Array.from(this.hostElement.children).forEach((t=>{t.shadowRoot.querySelector("button").style.width="100%"}))}setChildrenCorners(){const t=Array.from(this.hostElement.children);if(1===t.length)t[0].setAttribute("radius","all");else for(let e=0;e<t.length;e++)0===e&&t[e].setAttribute("radius","left"),e>0&&e<t.length-1&&t[e].setAttribute("radius","neither"),e===t.length-1&&t[e].setAttribute("radius","right")}render(){return(0,r.h)(r.a,null,this.styles&&(0,r.h)("style",null,this.styles),(0,r.h)("div",{class:this.getCssClassMap(),part:this.getBasePartMap(),"aria-label":this.getAriaLabelTranslation(),role:"group"},(0,r.h)("slot",null)))}getBasePartMap(){return this.getCssOrBasePartMap("basePart")}getCssClassMap(){return this.getCssOrBasePartMap("css")}getCssOrBasePartMap(t){const e="basePart"===t?"":"toggle-group--";return(0,o.c)("toggle-group",this.fullWidth&&`${e}block`,!this.fullWidth&&`${e}inline`,this.disabled&&`${e}disabled`)}get hostElement(){return(0,r.g)(this)}static get watchers(){return{background:["handlePropsChange"],disabled:["handlePropsChange"],hideBorder:["handlePropsChange"],size:["handlePropsChange"],variant:["handlePropsChange"]}}};n.style=":host{--border-color:var(--telekom-color-ui-border-standard);--border-color-disabled:var(--telekom-color-ui-border-disabled);--border:var(--telekom-spacing-composition-space-01) solid\n    var(--border-color);--border-disabled:var(--telekom-spacing-composition-space-01) solid\n    var(--border-color-disabled);--radius:var(--telekom-radius-standard)}.toggle-group--inline{display:inline-flex}.toggle-group--block{display:flex}.toggle-group--block ::slotted(*){flex-grow:1}"},94200:(t,e,s)=>{s.d(e,{s:()=>i});const r={beta:"\u03b2",WIP:"\ud83d\udee0 WIP",deprecated:"\ud83d\ude35 Deprecation notice",warning:"Warning"},o={beta:"This component is currently in beta status. Some things may be refactored. Watch the change log for now.",WIP:"This component is currently under development and is prone to change. Please wait for its release.\nIt will be available in Storybook once it's finished and documented.",deprecated:"This component is deprecated."};function i({tag:t="WIP",extraMessage:e=null,message:s=null,source:i=null,type:a="info"}){(0,console[a])(`%c scale \u2013 ${r[t]} `,"background: #E20074; color: #FFF; border-radius: 4px",`\n\n${s||o[t]} ${e?"\n"+e:""}\n    `,null!==i?"\nsource:":"","object"==typeof i?i:`${i}`,null!==i?"\n\n":"")}},91779:(t,e,s)=>{s.d(e,{a:()=>d,b:()=>a,c:()=>o,e:()=>i,g:()=>h,h:()=>r,i:()=>n});const r=t=>!!t.shadowRoot&&!!t.attachShadow,o=t=>{let e=document.styleSheets[0];if(!e){const t=document.createElement("style");document.head.appendChild(t),e=document.styleSheets[0],document.head.removeChild(t)}return function(){try{return/^:/.test(t)||(t=":"+t),e.insertRule("html"+t+"{}",0),e.deleteRule(0),!0}catch(s){return!1}}()};function i(t,e,s){const r=e+"Legacy",o=[];return void 0!==t[r]&&o.push(t[r].emit(s)),o.push(t[e].emit(s)),o}function a(t,e){let s=t.target;const r=null!=s.shadowRoot,o=r?t.composedPath():[];do{if(s===e)return!1;s=r?o.shift():s.parentNode}while(s);return!0}const n=t=>null!=t&&1===t.nodeType&&"SCALE-ICON"===t.nodeName.toUpperCase().substring(0,10);let l=0;function h(){return l++}const d=t=>Promise.all(t.getAnimations({subtree:!0}).map((t=>t.finished)))}}]);