"use strict";(self.webpackChunkdocs_next=self.webpackChunkdocs_next||[]).push([[94066],{96255:e=>{e.exports=JSON.parse('{"tag":{"label":"nginx","permalink":"/docs-next/pr-preview/pr-291/docs/tags/nginx","allTagsPath":"/docs-next/pr-preview/pr-291/docs/tags","count":3,"items":[{"id":"best-practices/storage/object-storage-service/accessing-obs-through-an-nginx-reverse-proxy","title":"Accessing OBS Through an NGINX Reverse Proxy","description":"Generally, you can access OBS using a bucket\'s access domain name (for example, https://bucketname.obs.eu-de.otc.t-systems.com) provided by OBS or using a user-defined domain name bound to an OBS bucket.","permalink":"/docs-next/pr-preview/pr-291/docs/best-practices/storage/object-storage-service/accessing-obs-through-an-nginx-reverse-proxy"},{"id":"best-practices/containers/cloud-container-engine/prepare-cce-for-external-workloads","title":"Prepare CCE to Expose Workloads","description":"Before deploying our workloads, the CCE cluster must be equipped with a set of foundational components. In this section, we\'ll install and configure essential prerequisites such as the NGINX Ingress Controller for routing external traffic, cert-manager for managing TLS certificates, and other supporting workloads. These components establish the baseline infrastructure required to expose services securely and ensure smooth operation of the application stack within the Kubernetes environment.","permalink":"/docs-next/pr-preview/pr-291/docs/best-practices/containers/cloud-container-engine/prepare-cce-for-external-workloads"},{"id":"best-practices/databases/distributed-cache-service/using-nginx-for-public-access-to-single-node-master-standby-or-proxy-cluster-dcs-redis-instances","title":"Using Nginx for Public Access of DCS Redis Instances","description":"This section describes how to access a single-node, master/standby, read/write splitting, or Proxy Cluster DCS Redis 4.0, 5.0, or 6.0 instance by using a jump server. This solution cannot be used to access a Redis Cluster instance over public networks.","permalink":"/docs-next/pr-preview/pr-291/docs/best-practices/databases/distributed-cache-service/using-nginx-for-public-access-to-single-node-master-standby-or-proxy-cluster-dcs-redis-instances"}],"unlisted":false}}')}}]);