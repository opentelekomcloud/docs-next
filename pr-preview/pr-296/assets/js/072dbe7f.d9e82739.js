"use strict";(self.webpackChunkdocs_next=self.webpackChunkdocs_next||[]).push([[82586],{56662:e=>{e.exports=JSON.parse('{"tag":{"label":"ingress","permalink":"/docs-next/pr-preview/pr-296/docs/tags/ingress","allTagsPath":"/docs-next/pr-preview/pr-296/docs/tags","count":3,"items":[{"id":"blueprints/by-use-case/security/authentik/cce-authentik","title":"Deploy Authentik on CCE","description":"This tutorial will guide you through the process of setting up authentik on your CCE Kubernetes environment.","permalink":"/docs-next/pr-preview/pr-296/docs/blueprints/by-use-case/security/authentik/cce-authentik"},{"id":"blueprints/by-use-case/security/keycloak/cce-keycloak","title":"Deploy Keycloak on CCE","description":"In this blueprint, we are going to discuss the steps to install Keycloak, in Open Telekom Cloud, on a CCE Cluster.","permalink":"/docs-next/pr-preview/pr-296/docs/blueprints/by-use-case/security/keycloak/cce-keycloak"},{"id":"best-practices/containers/cloud-container-engine/prepare-cce-for-external-workloads","title":"Prepare CCE to Expose Workloads","description":"Before deploying our workloads, the CCE cluster must be equipped with a set of foundational components. In this section, we\'ll install and configure essential prerequisites such as the NGINX Ingress Controller for routing external traffic, cert-manager for managing TLS certificates, and other supporting workloads. These components establish the baseline infrastructure required to expose services securely and ensure smooth operation of the application stack within the Kubernetes environment.","permalink":"/docs-next/pr-preview/pr-296/docs/best-practices/containers/cloud-container-engine/prepare-cce-for-external-workloads"}],"unlisted":false}}')}}]);